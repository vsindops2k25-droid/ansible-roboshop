- name: setup shipping server
  hosts: shipping
  become: yes
  tasks:
    - name: install maven
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop: 
      - maven
      - mysql

    - name: create roboshop system user
      ansible.builtin.user:
        name: roboshop
        comment: roboshop system user
        system: true
        shell: /sbin/nologin
        home: /home

    - name: remove app directory  # safe to remove if already present
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create application directory
      ansible.builtin.file:
        state: directory
        path: /app

    - name: delete old shipping content
      ansible.builtin.file:
        path: /tmp/shipping.zip
        state: absent
 
    - name: download shippig application content
      ansible.builtin.get_url:
        url: "https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip"
        dest: /tmp/shipping.zip

    - name: unzip shippig application content
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app
        
    - name: move jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy shipping service file
      ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

    - name: import shipping fine into mysql
      community.mysql.mysql_db:
        state: import
        name: all
        login host: mysql.dops.fun
        login_user: root
        login_password: Roboshop@1
        target: "{{ item }}"
      loop:
      - /app/db/schema.sql
      - /app/db/app-user.sql
      - /app/db/master-data.sql
